{"version":3,"sources":["index.js"],"names":["Square","props","console","log","winner","className","onClick","value","HistoryBoard","currentBoard","Board","i","this","squares","boardRows","counter","row","j","push","renderSquare","board","gerarBoard","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","historyReversed","slice","length","calculateWinner","setState","concat","step","reverse","map","move","desc","jumpTo","status","current","moves","gerarBoardHistorico","handleClick","reordernar","reversed","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3a9fc81.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n    console.log(props.winner);\r\n    return (\r\n        <button \r\n            className=\"square\" \r\n            onClick={props.onClick}\r\n        >\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nfunction HistoryBoard(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"history-board\">\r\n                <div className=\"square\">{props.currentBoard[0]}</div>\r\n                <div className=\"square\">{props.currentBoard[1]}</div>\r\n                <div className=\"square\">{props.currentBoard[2]}</div>\r\n             </div>\r\n             <div className=\"history-board\">\r\n                <div className=\"square\">{props.currentBoard[3]}</div>\r\n                <div className=\"square\">{props.currentBoard[4]}</div>\r\n                <div className=\"square\">{props.currentBoard[5]}</div>\r\n             </div>\r\n             <div className=\"history-board\">\r\n                <div className=\"square\">{props.currentBoard[6]}</div>\r\n                <div className=\"square\">{props.currentBoard[7]}</div>\r\n                <div className=\"square\">{props.currentBoard[8]}</div>\r\n             </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n                winner={this.props.winner}\r\n                value={this.props.squares[i]} \r\n                onClick={() => this.props.onClick(i)}    \r\n            />\r\n        );\r\n    }\r\n\r\n    gerarBoard() {\r\n        let boardRows = [];\r\n        let counter = 0;\r\n\r\n        for(let i = 0; i < 3; i++) {\r\n            let row = [];\r\n            for(let j = 0; j < 3; j++) {\r\n                row.push(this.renderSquare(counter));\r\n                counter++;\r\n            }\r\n            boardRows.push(<div className=\"board-row\">{row}</div>);\r\n        }\r\n        return boardRows;\r\n    }\r\n\r\n    render() {\r\n\r\n        let board = this.gerarBoard();\r\n\r\n        return (\r\n            <div>\r\n                {board}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n            historyReversed: false,\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares,\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,   \r\n        });\r\n    }\r\n    \r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n        });\r\n    }\r\n\r\n    reordernar() {\r\n        if (!(this.state.historyReversed)) {\r\n            this.setState({\r\n                historyReversed: true,\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                historyReversed: false,\r\n            });\r\n        }\r\n    }\r\n\r\n    gerarBoardHistorico() {\r\n        let history = this.state.history;\r\n        if (this.state.historyReversed) {\r\n            history = this.state.history.slice(0).reverse();\r\n        }\r\n\r\n        let counter = 0;\r\n\r\n        const moves = history.map((step, move) => {\r\n\r\n            if (this.state.historyReversed) {\r\n                move = (this.state.history.length - 1) - counter;\r\n                counter++;\r\n            }\r\n\r\n            const desc = move ?\r\n            'Go to move #' + move :\r\n            'Go to game start';\r\n            return (\r\n                <li key={move}>\r\n                    {\r\n                        move === this.state.stepNumber ?\r\n                        <button className=\"current-board\" onClick={() => this.jumpTo(move)}>{desc}</button> : \r\n                        <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                    }\r\n                    {\r\n                        this.state.historyReversed ? \r\n                        <HistoryBoard className=\"history-board\" currentBoard={history[counter - 1].squares} /> : <HistoryBoard className=\"history-board\" currentBoard={history[move].squares} />\r\n                    }\r\n                </li>\r\n            )\r\n        });\r\n\r\n        return moves;\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        const moves = this.gerarBoardHistorico();\r\n\r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner: ' + current.squares[winner[0]]; // aqui poderia ser qualquer posição do array que a função calculateWinner está retornando, uma vez que todas apontarão para a letra vencedora (X ou O)\r\n        }\r\n        else {\r\n            status = 'Next Player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                        winner={winner}\r\n                        squares={current.squares}\r\n                        onClick={(i) => this.handleClick(i)}\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <button className=\"reorder\" onClick={() => this.reordernar()}>Reordenar Jogadas</button>\r\n                    {\r\n                        this.state.historyReversed ? \r\n                        <ol reversed={true}>{moves}</ol> : \r\n                        <ol>{moves}</ol>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n\r\n    for (let i = 0; i< lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return lines[i];\r\n        }\r\n    }\r\n    return null;\r\n}"],"sourceRoot":""}